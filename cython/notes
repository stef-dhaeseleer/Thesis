
CALLING LINUX COMMANDS FROM PYTHON

devmem ADRR W (VALUE TO WRITE)

import os
resp = os.popen('devmem 0x43c00000').read()
resp = resp[0:len(resp)-2]
res = int(resp, 16)

cp ../interface.py /run/media/r0583050/cbd2711f-99e9-41c0-8e22-e400aa213a4a/home/root/cython; cp ../monitor.py /run/media/r0583050/cbd2711f-99e9-41c0-8e22-e400aa213a4a/home/root/cython;


SCREEN COMMANDS

make uart to open (linux)

Ctrl+a d (Detach from screen without quiting)

screen -r (resume to detached screen)

When detached, cable can be unplugged and replugged without issues

import monitor

monitor.init_platform()

monitor.get_hw_status()
monitor.start_all(0)

monitor.get_results_all()
monitor.print_results()

import interface

port = 0x43C00000
port = 0x43C10000
port = 0x43C20000
port = 0x43C30000
port = 0x43C40000


port = 0x43DE0000

cmd = interface.read_cmd(interface.get_reg_address(port, 6))
interface.issue_linux_cmd(cmd)

cmd = interface.read_cmd(interface.get_reg_address(port, 5))
interface.issue_linux_cmd(cmd)

=> 0, 1, 0, 1, 0 ...
=> Issue in passing the region to the DES wrapper





